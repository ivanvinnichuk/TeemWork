@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <link rel="shortcut icon" href="/icons/logo.png" type="image/png">
    <link href="/Content/stylematerial.css" rel="stylesheet" />
    <meta name="viewport" content="width=device-width" />
    <title>Generalmonitoring</title>
</head>
<body>
    <script type="text/javascript" src="https://code.jquery.com/jquery-2.1.1.min.js"></script>
    <script src="http://www.amcharts.com/lib/3/amcharts.js"></script>
    <script src="http://www.amcharts.com/lib/3/serial.js"></script>
    <script src="/Scripts/themechart.js"></script>
    <script src="/Scripts/jsmaterial.js"></script>
    <script type="text/javascript">
        var cpudata = [];
        var ramdata = [];
        var romdata = [];
        var id = 1;
    </script>
        <header>
            @*Ліве меню*@
            <div id="slide-out" class="side-nav fixed">
                <div class="section white"><img src="/icons/main_logo.png" style="height: 75px" /></div>
                <div class="section grey"><h4>Monitoring</h4></div>
                <div style="position: fixed; width:inherit">
                    <a href="/Files/Generalmonitoring" class="btn waves-effect waves-light  input-field blue-text text-darken-2 transparent">Monitoring</a>
                    <a href="/Files/Index" class="btn waves-effect waves-light  input-field transparent">Settings</a>
                    <a href="/Files/Cron" class="btn waves-effect waves-light  input-field transparent">Task Scheduler</a>
                    <a href="/Files/Manager" class="btn waves-effect waves-light  input-field transparent">File Manager</a>
                </div>
            </div>
            <nav style="position: fixed; height: 45px; z-index: 900; background-color: #1976D2; ">
                <div class="nav-wrapper">
                    <a href="#" data-activates="slide-out" class="button-collapse show-on-large mdi-navigation-menu"><img class="btn-floating blue darken-2" src="../icons/menu.png" /></a>
                    <i style="margin-left:18%; ">diploma11.cloudapp.net</i>
                </div>
            </nav>

            <script type="text/javascript">
                // Initialize collapse button
                $(".button-collapse").sideNav();
                // Initialize collapsible (uncomment the line below if you use the dropdown variation)
                $('.collapsible').collapsible();
            </script>
        </header>
        <main>
            <div class="row">
                <div class="col s12 m12 l10" style="float:right; margin-top:50px;">
                    <div class="row blue lighten-4">
                        <div class="col s12 m3 l2"><h5>AC Power</h5></div>
                        <div class="col s11 m2 l2 waves-effect waves-light btn deep-orange" onclick="BOffClick" style="margin: 0.5rem 1rem; float: right">Power Off</div>
                        <div class="col s11 m2 l2 waves-effect waves-light btn deep-orange" onclick="BRebClick" style="margin: 0.5rem 1rem; float: right">Reboot</div>
                        <div class="col s11 m2 l2 waves-effect waves-light btn deep-orange" onclick="BHibClick" style="margin: 0.5rem 1rem; float: right">Hibernate</div>
                    </div>
                    <div class="row white">
                        <div class="col s12 m6 l3"><h5>CPU Usage</h5></div>
                        <div class="col s12 m6 l2"><label></label></div>
                        <div class="chartdiv" id="cpudiv"></div>
                    </div>
                    <div class="row">
                        <div class="col s12 m6 l4"><h5>RAM Usage</h5></div>
                        <div class="col s12 m6 l2"><label></label></div>
                        <div class="chartdiv" id="ramdiv"></div>
                    </div>
                    <div class="row">
                        <div class="col s12 m6 l4"><h5>ROM Usage</h5></div>
                        <div class="col s12 m6 l2"><label></label></div>
                        <div class="chartdiv" id="hdddiv"></div>
                    </div>
                    <script type="text/javascript">
                        var temp = [];
                        function show() {
                            $.ajax({
                                url: '@Url.Action("Monitoring", "Files")',
                                data: { "id": id++ },
                                success: function (data) {
                                    temp = data;
                                    draw();
                                }
                            });
                        }
                        $(document).ready(function () {
                            show();
                            setInterval('show()', 1000);
                        });
                        draw();
                        function draw() {
                            var chartData = generateChartData(cpudata, 0);
                            var chart = AmCharts.makeChart("cpudiv", {
                                "type": "serial",
                                "theme": "light",
                                "marginRight": 15,
                                "dataProvider": chartData,
                                "valueAxes": [{
                                    "position": "left",
                                    "title": "Load of processor"
                                }],
                                "graphs": [{
                                    "id": "g1",
                                    "fillAlphas": 0.4,
                                    "valueField": "visits",
                                    "balloonText": "<div style='margin:5px; font-size:19px;'><b>[[value]]%</b></div>"
                                }],
                                "chartScrollbar": {
                                    "graph": "g1",
                                    "scrollbarHeight": 40,
                                    "backgroundAlpha": 0,
                                    "selectedBackgroundAlpha": 0.1,
                                    "selectedBackgroundColor": "#888888",
                                    "graphFillAlpha": 0,
                                    "graphLineAlpha": 0.5,
                                    "selectedGraphFillAlpha": 0,
                                    "selectedGraphLineAlpha": 1,
                                    "autoGridCount": true,
                                    "color": "#AAAAAA"
                                },
                                "chartCursor": {
                                    "categoryBalloonDateFormat": "JJ:NN:SS",
                                    "cursorPosition": "mouse"
                                },
                                "categoryField": "date",
                                "categoryAxis": {
                                    "minPeriod": "ss",
                                    "parseDates": true
                                },
                                "export": {
                                    "enabled": true
                                }
                            });

                            var chartData = generateChartData(ramdata, 1);
                            var chart = AmCharts.makeChart("ramdiv", {
                                "type": "serial",
                                "theme": "light",
                                "marginRight": 15,
                                "dataProvider": chartData,
                                "valueAxes": [{
                                    "position": "left",
                                    "title": "Load of ram"
                                }],
                                "graphs": [{
                                    "id": "g1",
                                    "fillAlphas": 0.4,
                                    "valueField": "visits",
                                    "balloonText": "<div style='margin:5px; font-size:19px;'><b>[[value]]MB</b></div>"
                                }],
                                "chartScrollbar": {
                                    "graph": "g1",
                                    "scrollbarHeight": 40,
                                    "backgroundAlpha": 0,
                                    "selectedBackgroundAlpha": 0.1,
                                    "selectedBackgroundColor": "#888888",
                                    "graphFillAlpha": 0,
                                    "graphLineAlpha": 0.5,
                                    "selectedGraphFillAlpha": 0,
                                    "selectedGraphLineAlpha": 1,
                                    "autoGridCount": true,
                                    "color": "#AAAAAA"
                                },
                                "chartCursor": {
                                    "categoryBalloonDateFormat": "JJ:NN:SS",
                                    "cursorPosition": "mouse"
                                },
                                "categoryField": "date",
                                "categoryAxis": {
                                    "minPeriod": "ss",
                                    "parseDates": true
                                },
                                "export": {
                                    "enabled": true
                                }
                            });
                            var chartData = generateChartData(romdata, 2);
                            var chart = AmCharts.makeChart("hdddiv", {
                                "type": "serial",
                                "theme": "light",
                                "marginRight": 15,
                                "dataProvider": chartData,
                                "valueAxes": [{
                                    "position": "left",
                                    "title": "Load of rom"
                                }],
                                "graphs": [{
                                    "id": "g1",
                                    "fillAlphas": 0.4,
                                    "valueField": "visits",
                                    "balloonText": "<div style='margin:5px; font-size:19px;'><b>[[value]]%</b></div>"
                                }],
                                "chartScrollbar": {
                                    "graph": "g1",
                                    "scrollbarHeight": 40,
                                    "backgroundAlpha": 0,
                                    "selectedBackgroundAlpha": 0.1,
                                    "selectedBackgroundColor": "#888888",
                                    "graphFillAlpha": 0,
                                    "graphLineAlpha": 0.5,
                                    "selectedGraphFillAlpha": 0,
                                    "selectedGraphLineAlpha": 1,
                                    "autoGridCount": true,
                                    "color": "#AAAAAA"
                                },
                                "chartCursor": {
                                    "categoryBalloonDateFormat": "JJ:NN:SS",
                                    "cursorPosition": "mouse"
                                },
                                "categoryField": "date",
                                "categoryAxis": {
                                    "minPeriod": "ss",
                                    "parseDates": true
                                },
                                "export": {
                                    "enabled": true
                                }
                            });
                        }
                        chart.addListener("dataUpdated", zoomChart);
                        // when we apply theme, the dataUpdated event is fired even before we add listener, so
                        // we need to call zoomChart here
                        zoomChart();
                        // this method is called when chart is first inited as we listen for "dataUpdated" event
                        function zoomChart() {
                            // different zoom methods can be used - zoomToIndexes, zoomToDates, zoomToCategoryValues
                            chart.zoomToIndexes(chartData.length - 250, chartData.length - 100);
                        }


                        // generate some random data, quite different range
                        function generateChartData(data, type) {
                            var test = JSON.parse(temp);
                            var chartData = [];
                            var i = 0;
                            while (data[i])
                                i++;
                            // current date
                            var firstDate = new Date();
                            firstDate.setSeconds(firstDate.getSeconds() - 99);
                            for (var j = 0; j < 99; j++) {
                                if (j < 99 - i) {
                                    var newDate = new Date(firstDate);
                                    newDate.setSeconds(newDate.getSeconds() + j);
                                    var visits = 0;
                                    chartData.push({
                                        date: newDate,
                                        visits: visits,
                                    });                                    
                                }
                                else
                                    for (var c = 0; c < i; c++) {
                                        chartData[j++]=data[c];                                                                                
                                    }
                            }
                            //data = [];                            
                            
                            //for (var i = 0; i < 99; i++) {
                            var newDate = new Date(firstDate);
                            newDate.setSeconds(newDate.getSeconds() + 99);
                            if (type == 0)
                                var visits = parseInt(test.CPU,10);
                            else if (type == 1)
                                var visits = parseInt(test.RAM/2,10);
                            else
                                var visits = Math.random() * 2 + 30;
                            data.push({
                                date: newDate,
                                visits: visits
                            });
                            chartData.push({
                                date: newDate,
                                visits: visits
                            });
                            //}                            
                                return chartData;                            
                        }
                    </script>

                </div>
            </div>
        </main>
</body>

</html>
